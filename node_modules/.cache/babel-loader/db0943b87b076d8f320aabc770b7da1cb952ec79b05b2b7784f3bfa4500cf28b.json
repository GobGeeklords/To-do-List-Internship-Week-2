{"ast":null,"code":"import { ACTIONS } from './actions.js';\nexport function reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.ADD_TODO:\n      return {\n        ...state,\n        activeTasks: [...state.activeTasks, newTodo(action.payload.value, action.payload.priority, action.payload.calendar)]\n      };\n    case ACTIONS.DELETE_TODO:\n      return {\n        ...state,\n        activeTasks: state.activeTasks.filter(task => task.id !== action.payload.id)\n      };\n    case ACTIONS.COMPLETE_TODO:\n      const completedTask = state.activeTasks.find(task => task.id === action.payload.id);\n      const completedTaskWithDate = {\n        ...completedTask,\n        endDate: new Date()\n      };\n      return {\n        ...state,\n        activeTasks: state.activeTasks.filter(task => task.id !== action.payload.id),\n        completedTasks: [...state.completedTasks, completedTaskWithDate]\n      };\n    case ACTIONS.EDIT_TODO:\n      const updatedTasks = state.activeTasks.map(task => {\n        if (task.id === action.payload.id) {\n          return {\n            ...task,\n            value: action.payload.newValue\n          };\n        }\n        return task;\n      });\n      return {\n        ...state,\n        activeTasks: updatedTasks\n      };\n    case ACTIONS.SET_STATE:\n      return action.payload;\n    default:\n      return state;\n  }\n}\nfunction newTodo(value, priority, calendar) {\n  return {\n    id: Date.now(),\n    value: value,\n    priority: priority,\n    calendar: calendar\n  };\n}","map":{"version":3,"names":["ACTIONS","reducer","state","action","type","ADD_TODO","activeTasks","newTodo","payload","value","priority","calendar","DELETE_TODO","filter","task","id","COMPLETE_TODO","completedTask","find","completedTaskWithDate","endDate","Date","completedTasks","EDIT_TODO","updatedTasks","map","newValue","SET_STATE","now"],"sources":["C:/Users/acer/Desktop/react-todo-app-master/src/reducer/reducer.js"],"sourcesContent":["import { ACTIONS } from './actions.js'\n\nexport function reducer(state, action){\n    switch(action.type){\n        case ACTIONS.ADD_TODO:\n            return {\n                ...state,\n                activeTasks: [...state.activeTasks, newTodo(action.payload.value, action.payload.priority, action.payload.calendar)]\n            }\n        case ACTIONS.DELETE_TODO:\n            return {\n                ...state,\n                activeTasks: state.activeTasks.filter(\n                    (task) => task.id !== action.payload.id\n                ),\n            }    \n        case ACTIONS.COMPLETE_TODO:\n            const completedTask = state.activeTasks.find(\n              (task) => task.id === action.payload.id\n            );\n            const completedTaskWithDate = {\n              ...completedTask,\n              endDate: new Date(),\n            };\n            return {\n              ...state,\n              activeTasks: state.activeTasks.filter(\n                (task) => task.id !== action.payload.id\n              ),\n              completedTasks: [...state.completedTasks, completedTaskWithDate],\n            };\n        case ACTIONS.EDIT_TODO:\n            const updatedTasks = state.activeTasks.map((task) => {\n                if (task.id === action.payload.id) {\n                    return {\n                        ...task,\n                        value: action.payload.newValue\n                    };\n                }\n                return task;\n            });\n            return {\n                ...state,\n                activeTasks: updatedTasks\n            };\n        case ACTIONS.SET_STATE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction newTodo(value, priority, calendar){\n    return{\n        id: Date.now(),\n        value: value,\n        priority: priority,\n        calendar: calendar,\n    }\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,cAAc;AAEtC,OAAO,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAC;EAClC,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKJ,OAAO,CAACK,QAAQ;MACjB,OAAO;QACH,GAAGH,KAAK;QACRI,WAAW,EAAE,CAAC,GAAGJ,KAAK,CAACI,WAAW,EAAEC,OAAO,CAACJ,MAAM,CAACK,OAAO,CAACC,KAAK,EAAEN,MAAM,CAACK,OAAO,CAACE,QAAQ,EAAEP,MAAM,CAACK,OAAO,CAACG,QAAQ,CAAC;MACvH,CAAC;IACL,KAAKX,OAAO,CAACY,WAAW;MACpB,OAAO;QACH,GAAGV,KAAK;QACRI,WAAW,EAAEJ,KAAK,CAACI,WAAW,CAACO,MAAM,CAChCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKZ,MAAM,CAACK,OAAO,CAACO,EACzC;MACJ,CAAC;IACL,KAAKf,OAAO,CAACgB,aAAa;MACtB,MAAMC,aAAa,GAAGf,KAAK,CAACI,WAAW,CAACY,IAAI,CACzCJ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKZ,MAAM,CAACK,OAAO,CAACO,EACvC,CAAC;MACD,MAAMI,qBAAqB,GAAG;QAC5B,GAAGF,aAAa;QAChBG,OAAO,EAAE,IAAIC,IAAI,CAAC;MACpB,CAAC;MACD,OAAO;QACL,GAAGnB,KAAK;QACRI,WAAW,EAAEJ,KAAK,CAACI,WAAW,CAACO,MAAM,CAClCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKZ,MAAM,CAACK,OAAO,CAACO,EACvC,CAAC;QACDO,cAAc,EAAE,CAAC,GAAGpB,KAAK,CAACoB,cAAc,EAAEH,qBAAqB;MACjE,CAAC;IACL,KAAKnB,OAAO,CAACuB,SAAS;MAClB,MAAMC,YAAY,GAAGtB,KAAK,CAACI,WAAW,CAACmB,GAAG,CAAEX,IAAI,IAAK;QACjD,IAAIA,IAAI,CAACC,EAAE,KAAKZ,MAAM,CAACK,OAAO,CAACO,EAAE,EAAE;UAC/B,OAAO;YACH,GAAGD,IAAI;YACPL,KAAK,EAAEN,MAAM,CAACK,OAAO,CAACkB;UAC1B,CAAC;QACL;QACA,OAAOZ,IAAI;MACf,CAAC,CAAC;MACF,OAAO;QACH,GAAGZ,KAAK;QACRI,WAAW,EAAEkB;MACjB,CAAC;IACL,KAAKxB,OAAO,CAAC2B,SAAS;MAClB,OAAOxB,MAAM,CAACK,OAAO;IACzB;MACI,OAAON,KAAK;EACpB;AACJ;AAEA,SAASK,OAAOA,CAACE,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAC;EACvC,OAAM;IACFI,EAAE,EAAEM,IAAI,CAACO,GAAG,CAAC,CAAC;IACdnB,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA;EACd,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}