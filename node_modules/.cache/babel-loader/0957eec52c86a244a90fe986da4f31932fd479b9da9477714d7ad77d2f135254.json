{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\react-todo-app-master\\\\src\\\\components\\\\EditForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport { ACTIONS } from \"../reducer/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditForm(_ref) {\n  _s();\n  let {\n    handleFinishEdit,\n    dispatch,\n    todoId,\n    oldValue,\n    darkMode\n  } = _ref;\n  const [newValue, setNewValue] = useState(\"\");\n  const handleSubmitEdit = e => {\n    e.preventDefault();\n    dispatch({\n      type: ACTIONS.EDIT_TODO,\n      payload: {\n        newValue,\n        id: todoId\n      }\n    });\n    handleFinishEdit();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editform\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: darkMode ? \"editform__form darkmode\" : \"editform__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"editform__title\",\n        children: \"Change the content of your task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"editform__xmark\",\n        icon: faXmark,\n        onClick: handleFinishEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitEdit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: darkMode ? \"editform__input darkmode\" : \"editform__input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"task\",\n            children: \"Type new value: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"task\",\n            value: newValue,\n            onChange: e => setNewValue(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editform__oldvalue\",\n          children: [\"Old value: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: oldValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"editform__btn\",\n          children: \"Edit task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(EditForm, \"fdlHowMJrXHJUYteq1dGw+4H1HM=\");\n_c = EditForm;\nexport default EditForm;\nvar _c;\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faXmark","ACTIONS","jsxDEV","_jsxDEV","EditForm","_ref","_s","handleFinishEdit","dispatch","todoId","oldValue","darkMode","newValue","setNewValue","handleSubmitEdit","e","preventDefault","type","EDIT_TODO","payload","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","onSubmit","htmlFor","name","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/react-todo-app-master/src/components/EditForm.jsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { ACTIONS } from \"../reducer/actions\"\n\nfunction EditForm({handleFinishEdit, dispatch, todoId, oldValue, darkMode}) {\n    const [newValue, setNewValue] = useState(\"\")\n\n    const handleSubmitEdit = (e) => {\n        e.preventDefault()\n        dispatch({type: ACTIONS.EDIT_TODO, payload: {newValue, id: todoId}})\n        handleFinishEdit()\n    }\n\n    return ( \n        <div className=\"editform\">\n            <div className={darkMode ? \"editform__form darkmode\" : \"editform__form\"}>\n                <h3 className=\"editform__title\">Change the content of your task</h3>\n                <FontAwesomeIcon className=\"editform__xmark\" icon={faXmark} onClick={handleFinishEdit}/>\n\n                <form onSubmit={handleSubmitEdit}>\n                    <div className={darkMode ? \"editform__input darkmode\" : \"editform__input\"}>\n                        <label htmlFor=\"task\">Type new value: </label>\n                        <input type=\"text\" name=\"task\" value={newValue} onChange={e => setNewValue(e.target.value)} required/>\n                    </div>\n\n                    <div className=\"editform__oldvalue\">Old value: <strong>{oldValue}</strong></div>\n\n                    <button type=\"submit\" className=\"editform__btn\">Edit task</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default EditForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}