{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\react-todo-app-master\\\\src\\\\components\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useState, useEffect } from \"react\";\nimport '../styles/main.scss';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faListCheck, faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport taskIcon from '../assets/task-icon.png';\nimport { reducer } from \"../reducer/reducer\";\nimport AddTask from \"./AddTask\";\nimport TaskList from \"./TaskList\";\nimport CompletedTasks from \"./CompletedTasks\";\nimport SortingOptions from \"./SortingOptios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  var _JSON$parse, _JSON$parse2;\n  const [state, dispatch] = useReducer(reducer, {\n    activeTasks: ((_JSON$parse = JSON.parse(localStorage.getItem(\"todos\"))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.activeTasks) || [],\n    completedTasks: ((_JSON$parse2 = JSON.parse(localStorage.getItem(\"todos\"))) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.completedTasks) || []\n  });\n  const [sortAZ, setSortAZ] = useState(false);\n  const [sortPriority, setSortPriority] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const sortingAZ = () => {\n    setSortAZ(true);\n    setSortPriority(false);\n  };\n  const sortingNewest = () => {\n    setSortAZ(false);\n    setSortPriority(false);\n  };\n  const sortingPriority = () => {\n    setSortAZ(false);\n    setSortPriority(true);\n  };\n  const changeMode = () => {\n    setDarkMode(!darkMode);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(state));\n  }, [state]);\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add(\"darkmode\");\n    } else {\n      document.body.classList.remove(\"darkmode\");\n    }\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: darkMode ? \"todo darkmode\" : 'todo',\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"todo__title\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: taskIcon,\n          alt: \"task icon\",\n          className: \"todo__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 35\n        }, this), \" React Todo App\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n        dispatch: dispatch,\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: darkMode ? \"line darkmode\" : 'line'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"tasklist__title\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faListCheck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 39\n        }, this), \" List of your tasks:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasklist__container\",\n        children: /*#__PURE__*/_jsxDEV(TaskList, {\n          todos: state.activeTasks,\n          dispatch: dispatch,\n          sortAZ: sortAZ,\n          sortPriority: sortPriority,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), state.completedTasks.length >= 1 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"completedtask__title\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCheckCircle,\n          style: {\n            color: 'green'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 80\n        }, this), \" Completed tasks:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 43\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completedtask__container\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: /*#__PURE__*/_jsxDEV(CompletedTasks, {\n            todos: state.completedTasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SortingOptions, {\n      sortingAZ: sortingAZ,\n      sortingNewest: sortingNewest,\n      sortingPriority: sortingPriority,\n      state: state,\n      dispatch: dispatch,\n      changeMode: changeMode,\n      darkMode: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"Created by \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/Piotr-Kuras97\",\n        children: \"Piotr Kura\\u015B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Todo, \"laRlcLSR9wsmMJ3Vtm3qfZVzbjM=\");\n_c = Todo;\n;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useReducer","useState","useEffect","FontAwesomeIcon","faListCheck","faCheckCircle","taskIcon","reducer","AddTask","TaskList","CompletedTasks","SortingOptions","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","_JSON$parse","_JSON$parse2","state","dispatch","activeTasks","JSON","parse","localStorage","getItem","completedTasks","sortAZ","setSortAZ","sortPriority","setSortPriority","darkMode","setDarkMode","sortingAZ","sortingNewest","sortingPriority","changeMode","setItem","stringify","document","body","classList","add","remove","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","icon","todos","length","style","color","href","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/react-todo-app-master/src/components/Todo.jsx"],"sourcesContent":["import React, { useReducer, useState, useEffect } from \"react\";\nimport '../styles/main.scss';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faListCheck, faCheckCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport taskIcon from '../assets/task-icon.png';\n\nimport { reducer } from \"../reducer/reducer\";\n\nimport AddTask from \"./AddTask\";\nimport TaskList from \"./TaskList\";\nimport CompletedTasks from \"./CompletedTasks\";\nimport SortingOptions from \"./SortingOptios\";\n\nfunction Todo() {\n\n  const [state, dispatch] = useReducer(reducer, {\n    activeTasks: JSON.parse(localStorage.getItem(\"todos\"))?.activeTasks || [],\n    completedTasks:\n      JSON.parse(localStorage.getItem(\"todos\"))?.completedTasks || [],\n  });\n\n  const [sortAZ, setSortAZ] = useState(false);\n  const [sortPriority, setSortPriority] = useState(false);\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  const sortingAZ = () => {\n    setSortAZ(true);\n    setSortPriority(false);\n  };\n  const sortingNewest = () => {\n    setSortAZ(false);\n    setSortPriority(false);\n  };\n\n  const sortingPriority = () => {\n    setSortAZ(false);\n    setSortPriority(true);\n  };\n\n  const changeMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(state));\n  }, [state]);\n\n  useEffect(() => {\n    if(darkMode){\n      document.body.classList.add(\"darkmode\");\n    }\n    else {\n      document.body.classList.remove(\"darkmode\");\n    }\n  }, [darkMode]);\n\n  return (\n    <>\n    <div className={darkMode ? \"todo darkmode\" : 'todo'}>\n      <h1 className=\"todo__title\"><img src={taskIcon} alt=\"task icon\" className=\"todo__icon\"/> React Todo App</h1>\n      <AddTask dispatch={dispatch} darkMode={darkMode}/>\n      <div className={darkMode ? \"line darkmode\" : 'line'}></div>\n      <h3 className=\"tasklist__title\"><FontAwesomeIcon icon={faListCheck} /> List of your tasks:</h3>\n      <div className=\"tasklist__container\">\n        <TaskList todos={state.activeTasks} dispatch={dispatch} sortAZ={sortAZ} sortPriority={sortPriority} darkMode={darkMode}/>\n      </div>\n\n      {state.completedTasks.length >= 1 ? <h3 className=\"completedtask__title\"><FontAwesomeIcon icon={faCheckCircle} style={{color: 'green'}}/> Completed tasks:</h3> : null}\n      <div className=\"completedtask__container\">\n        <ol>\n          <CompletedTasks todos={state.completedTasks}/>\n        </ol>\n      </div>\n    </div>\n   \n    <SortingOptions sortingAZ={sortingAZ} sortingNewest={sortingNewest} sortingPriority={sortingPriority} state={state} dispatch={dispatch} changeMode={changeMode} darkMode={darkMode}/>\n    <footer>Created by <a href=\"https://github.com/Piotr-Kuras97\">Piotr Kuraś</a></footer>\n    </>\n  );\n};\n\nexport default Todo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}